发表了博文 《影响报表性能的几个因素》 - 在软件项目中，用户常常会抱怨报表查询特别慢，甚至慢的不能忍受。这给开发人员带来巨大的压力。那么，报表的处理过程如何划分？处理过程中有哪些环节容易出现性能问题 http://t.cn/Rvm0JDg
#报表的数据组织：文件还是数据库#这里我们比较一下，报表工具结合Java程序访问数据文件（简称：文件报表），和报表工具直接访问关系数据库（简称：数据库报表）在几个方面的不同支持。其中，Java程序用来进行报表的源数据计算。
#报表的数据组织：文件还是数据库#数据读取速度：报表应用是一个读数据、进行计算、页面展现的过程。从数据读取角度，文件直接从操作系统来读，速度取决于硬盘的io速度。数据库需要通过jdbc读取，因为需要做数据流的对象转换，主流数据库的jdbc都比较慢。这方面，文件报表可以得5分，数据库报表得3分。
发表了博文 《集算器/Oracle性能对比测试（一）》 - 1、测试目的  在相同的硬件上测试集算器和Oracle的单机计算性能，对比两者在大数据量单任务计算、小数据量多任务并发计算时的性能差异。   http://t.cn/RvuRLQ9
#报表的数据组织：文件还是数据库#数据计算性能：从计算角度来看，简单sql语句执行的速度较快，复杂sql不容易优化。如果是存储过程中用for循环来fetch计算的话有可能要比java慢。这方面，文件报表和数据库报表都得3分。
#报表的数据组织：文件还是数据库#数据一致性：关系型数据库有元数据（描述数据结构的数据字典），还有事务管理，数据随机写入的一致性可以保证的很好，这样做牺牲一部分性能。在报表应用当中，数据读操作较多，写操作一般是顺序写入，对数据一致性要求并不高。这方面文件报表得3分，数据库报表得5分。
#报表的数据组织：文件还是数据库#易管理：文件可以按照业务种类、模块关系、时间顺序进行多级目录管理，可管理性较高。数据库是扁平结构，不能以多级目录的形式来管理数据，只适合管理数量较少的表。数据库中很容易形成大量意义混淆的表名，可管理性较差。这方面，文件报表得5分，数据库报表得3分。
#报表的数据组织：文件还是数据库#易开发：Sql的问题在于：不支持分步计算、集合化不彻底、缺乏有序集合、不支持对象引用。这就造成复杂sql和存储过程不符合自然思维习惯，编程困难。Java不提供关系运算的基本类库，group运算都要程序员自己编写，编程更不容易。这方面文件报表得1分，数据库报表得3分
发表了博文 《集算器/Oracle性能对比测试（二）》 - 5、用例描述  为方便理解，所有测试的运算逻辑将用SQL描述，Oracle直接执行SQL而集算器编写代码完成同等功能的运算。   5.1、大 http://t.cn/Rv3B7fW
#报表的数据组织：文件还是数据库#低成本数据放在文件中的综合成本要远远低于数据库。这方面，报表文件得5分，数据库得1分。
#报表的数据组织：文件还是数据库#扩展性：在数据存储上，数据文件更容易扩展。特别是有了hdfs之后，文件系统非常容易横向扩展。数据库集群横向扩展的技术较为复杂，配置、维护困难，成本也高。这方面，文件报表得5分，数据库报表得2分。
#报表的数据组织：文件还是数据库#安全性 数据库具有私有的数据存储方式，即使有了操作系统权限，外部系统也只能通过数据库提供的安全通道来存取数据。数据文件则暴露在操作系统用户下，必须要严格管理操作系统用户权限才能保证安全。 这方面，文件报表得3分，数据库报表得5分。
#报表的数据组织：文件还是数据库#总体看使用文件来组织数据比数据库略有优势。文件报表也有些短板，并不是文件系统本身的问题，而是开发语言Java的问题。最明显是Java针对报表数据源计算的开发困难，计算能力较差。采用新开发语言集算器来实施数据计算，可以弥补这个不足，让文件报表的优势明显起来。
发表了博文 《集算器/Oracle性能对比测试（三）》 - 6 测试用例   6.1 小数据量并发扫描  本用例测试了Oracle和集算器扫描数据量较小的表（文件）时的性能，采用了多任务并发访问的方式 http://t.cn/RvgocOV
#报表的数据组织：文件还是数据库#在报表项目当中，报表工具+集算器+文件的方案的优势比较明显，在相当多的场合可以替代报表工具+数据库的传统方案，特别是以历史数据为主要来源的报表项目，数据量大需要更强的扩展性和计算性能，但对数据一致性和安全性要求要低得多。
发表了博文 《集算器/Oracle性能对比测试（四）》 - 7、解读分析  观察所有的测试案例，总的来说，数据特点可以这样归纳：  1、小数据量并发计算，Oracle一般比集算器性能更高，有时高达数倍 http://t.cn/RveS3Ak
#报表的数据组织：文件还是数据库#我们可以考虑将数据库和文件系统结合起来为报表提供数据源，达到最佳的效果。其中，数据库存放变动较大的最新数据，文件系统存放变动较小的历史数据。
#报表的数据组织：文件还是数据库#接上这样做的好处是：最新数据数量不大，但是变动比较频繁，对数据一致性要求比较高，放在数据库中既可以保证数据一致性，又不会对数据库负载增加过大的压力。历史数据量较大，变动较少，可以充分发挥文件系统的优势。
#报表的数据组织：文件还是数据库#报表项目组可以考虑逐步引入集算器+数据文件的免费方案，和已有的数据库报表结合，在基本上不增加项目预算的前提下，充分发挥数据库和文件系统两者的优势。
发表了博文 《用集算器实现组内排序报表》 - 报表开发中经常会遇到需要进行组内排序的报表，如按月分组的汇总排序并显示每月销售额前十名的记录。这类报表通过报表工具直接实现会存在大量重复计算和隐藏行的情况 http://t.cn/RvDIYWC
发表了博文 《用集算器实现组内排序报表》 - 报表开发中经常会遇到需要进行组内排序的报表，如按月分组的汇总排序并显示每月销售额前十名的记录。这类报表通过报表工具直接实现会存在大量重复计算和隐藏行的情况 http://t.cn/RvDI1rp
#集算器序表和SQL数据表的异同#二者都是有结构的二维数据对象，都有记录、索引、主键的概念，都可以应用于结构化数据的计算。虽然都可以应用于结构化数据的计算，但两者的应用场景却有明显的区别，序表适合解决较复杂但数据量不是很大的计算问题，而数据表适合进行常规但可能数据量巨大的计算。
发表了博文 《集算器实现JAVA动态可挂接计算模块》 - 在JAVA开发中，程序员有时会遇到这样的情况：其他模块相对稳定，但计算模块经常发生无法预知的变化，每次需要重新编写。比如算法要随业务规则发生变 http://t.cn/RvFNXkq
#集算器序表和SQL数据表的异同#两者的不同是由底层机制决定的。序表具有有序的特点，每条记录、每列数据都有确定的序号；序表支持显式集合，序表之间可以直接进行集合运算；序表也是泛型集合，其基本元素既可以是数值也可以是引用或者另一个集合。
#集算器序表和SQL数据表的异同#SQL数据表缺乏上述特点，但它对内外存透明，可以用一致的语法来访问内存、外存或混合数据。
发表了博文 《用集算器实现隐藏格辅助计算的报表》 - 报表开发中经常要使用一些辅助的隐藏格完成报表的计算，隐藏格功能已然成为报表工具的标配，在一些复杂报表中隐藏格的确为我们带来了诸多便利。然而，报表中 http://t.cn/RPPKtjw
#集算器序表和SQL数据表的异同#集算器序表和SQL数据表都是有结构的二维数据对象，即以记录为基础，多条记录形成行式的二维表，二维表配合列名形成完整的数据结构。因为结构上大体相似，所以两者的基本用法区别不大。
发表了博文 《减少报表开发中的数据库冗余数据》 - 什么是报表的数据库内中间冗余数据？  绝大多数软件项目的数据库中，除了支撑系统运行的业务数据表（business table）之外，还有很多中间表（ http://t.cn/RPhjUuQ
#集算器序表和SQL数据表的异同#有序性的区别 ：序表的记录集合是有序的，因此可以轻松解决和顺序有关的计算。SQL数据表缺乏序号及序号相关的访问方法，这使它在序运算上不够方便。
#集算器序表和SQL数据表的异同#显式集合的区别：SQL有集合的概念，但不提供显式的集合，不能作为独立的变量存在，只能借助临时表来实现集合运算。而序表是真正的显式集合，可以实现集合运算。
发表了博文 《集算器与BIRT的集成过程》 - 集算器提供了标准JDBC与报表工具集成，这里以BIRT为例说明集成过程。  1、创建配置文件  创建集算器JDBC必须的两个配置文件config.xml http://t.cn/RP7OUhF
#集算器序表和SQL数据表的异同#泛型集合的区别：序表是泛型集合，除了存储实体数据，还可以存储指向关联数据的引用，这就使序表可以通过直观的对象引用实现关联计算。数据表只能存储实体数据，需要用复杂的关联语句才能完成等价的计算。
#集算器序表和SQL数据表的异同#对内外存透明的区别：SQL数据表因为不支持泛型和集合数据，内存中的数据写到外存时不会丢失信息，因而具有对内外存运算的透明性。
#集算器序表和SQL数据表的异同#首次访问数据表，数据通常来自外存；再访问同样的数据表时，数据就可以来自内存缓存；对于数据量较大的数据表，其一部分数据来自外存，另一部分来自于内存。无论数据是来自内存还是外存，数据量是大还是小，数据表的访问语法并无区别，程序员无需为此书写不同的SQL语句。
发表了博文 《实现高端报表工具的缓存功能》 - 高端的报表工具都提供了缓存机制，避免报表重复计算带来额外性能开销，节省CPU资源，实现结果共享。报表在计算过程中，大部分时间（85%以上）都消耗在数据源 http://t.cn/RPzQzEo
#集算器序表和SQL数据表的异同#接上如果数据量较大，那就应当使用游标（集算器的另一种数据对象）来进行外存计算，而游标和序表的语法是不同的；如果想提高性能或进行业务逻辑复杂的计算，程序员还必须将数据在游标和序表之间进行转换
#集算器序表和SQL数据表的异同#序表支持了泛型（特别是引用）和集合数据，内存中的数据写到外存时会丢失信息，不能再读入，这导致其运算无法对内外存透明。序表是纯内存数据对象，所能计算的数据量受到内存限制，不能太大；
#集算器序表和SQL数据表的异同#接上如果数据量较大，那就应当使用游标（集算器的另一种数据对象）来进行外存计算，而游标和序表的语法是不同的；如果想提高性能或进行业务逻辑复杂的计算，程序员还必须将数据在游标和序表之间进行转换
发表了博文 《集算器实现预置分组报表》 - 预置分组报表在报表开发中比较常见而且比较难处理。  预置分组报表是指分组无规律（可能是分组范围无规律，也可能分组顺序无规律），需要报表开发人员事先预置（固定 http://t.cn/RPZ3VHH
#集算器序表和SQL数据表的异同#序表对内外存不透明，程序员需要书写不同的代码来适应内存、外存或混合计算，还需要为将来数据量的增长而修改代码，因此前期设计和后期维护的工作量较大。而SQL数据表对内外存透明，程序员只需书写一套代码就能适应不同规模的数据，设计和维护的工作量较小。
#集算器序表和SQL数据表的异同#通过上述比较分析我们可以看出：数据有序、显示集合、泛型集合，序表的这些特点使它可以轻松解决和顺序有关的复杂问题，可以简化集合运算的复杂度，可以用直观的对象引用来处理复杂的多表关联。而SQL数据表对内外存透明，代码通用性更好。
发表了博文 《用集算器实现预置可重复分组报表》 - 我们曾经探讨过使用集算器实现预置分组报表和可重复分组报表的便利，那么对于两者的结合既预置（固定）又可重复的分组报表集算器是否仍然具有先天优势呢？下面 http://t.cn/RP236iM
#多样性计算能力是数据整合的关键#数据整合是将分散的、不易用的多样性数据源整理成集中的、易用的单数据源的过程。数据整合需要多样性计算能力，包括：1. 跨库计算能力。2. 计算非数据库中的结构化数据。3. 半结构化数据计算能力。
发表了博文 《解决报表中的复杂过程计算》 - 复杂计算在大多报表开发中都会遇到，开发人员多采用复杂sql、存储过程或者自定义数据集的方式为报表准备数据，其编写难度往往让报表开发人员望而却步，报表开发效 http://t.cn/RPLF4pB
#多样性计算能力是数据整合的关键#数据整合的过程中通常要实现特定的业务逻辑，有时是在获取源数据的阶段，有时是在异构数据源混合计算时，有时是在整合后。具有行业特色的业务逻辑一般无法用现成的ETL功能来配置实现，通常需要用硬编码来计算完成，因此多样性数据计算能力尤为关键。
#多样性计算能力是数据整合的关键#比如，商场总部要统计哪些商品当天过期或三天内过期，哪些商品已断档或断档风险较大，哪些会员的积分应该奖励或会员资格可以延长。再比如：异构数据源计算，统计出不包括最近一次、且连续三次逾期未付款的项目。
发表了博文 《集算器实现报表中零散的不规则计算》 - 报表中存在的不规则计算往往给报表开发带来很大的困难，使用报表工具往往很难甚至无法直接实现，这里的不规则计算是指报表中存在特殊条件的统计项（计算）， http://t.cn/RPUK758
#多样性计算能力是数据整合的关键#SQL是数据库查询语言，具有足够的结构化数据计算能力，可以用于实现业务逻辑硬编码，也常被当做数据整合工具。但SQL的多样性计算能力不足，尚不能很好地支持数据整合。
#多样性计算能力是数据整合的关键#主要表现在：1.SQL跨库计算在实践中表现不够好2.不能直接计算库外的结构化数据。3.半结构化数据的预处理工作量大。导致数据整合的性能低、成本高、额外的时间损耗严重、开发工作量大。ETL脚本缺乏批量结构化数据计算函数，难实现常规的业务算法。
发表了博文 《用集算器实现动态数据源报表》 - 经常会遇到一些报表需要根据不同的情况（参数）连接不同的数据源从而完成相应的数据的展现，也就是经常说的动态数据源报表。报表工具通常的做法有两种，一是不同的 http://t.cn/RP48Ku5
#多样性计算能力是数据整合的关键#实现数据整合中的多样性计算，esProc是一个较好的选择。 它性能高、成本低、无额外时间损耗、开发工作量小，同时还具有丰富的批量结构化数据计算函数。
#多样性计算能力是数据整合的关键#实现数据整合中的多样性计算，esProc是一个较好的选择。 它性能高、成本低、无额外时间损耗、开发工作量小，同时还具有丰富的批量结构化数据计算函数。
#多样性计算能力是数据整合的关键#自有引擎支持异构数据源。集算器可直接访问关系型和NoSQL数据库，轻松实现跨库计算。可直接读取Txt、Excel文件中的结构化数据，支持异构数据源之间的混合计算。内置文本分析器，支持字符串解析和正则表达式，可直接处理半结构化数据处理后的数据可直接参与混合计算。
#多样性计算能力是数据整合的关键#实现数据整合中的多样性计算，集算器是一个较好的选择。 它性能高、成本低、无额外时间损耗、开发工作量小，同时还具有丰富的批量结构化数据计算函数。
发表了博文《用集算器实现可重复分组报表》可重复分组报表在报表开发中比较常见。可重复分组报表是指同一记录出现在不同的分组中被重复统计，常见的可重复分组报表有两类：一是分组区间有交集，如统计年龄段在20-http://t.cn/RPbk8cd
#多样性计算能力是数据整合的关键#结构化数据计算函数。集算器是针对结构化数据计算的程序设计语言，提供了丰富的内置对象和库函数，可实现复杂的业务逻辑，还能降低从业务逻辑到程序代码的转换门槛。有序集合可以解决SQL\SP中的典型难题，比如相对位置访问、多级分组中的行间计算、复杂的排名计算。
#多样性计算能力是数据整合的关键#集算器可直接进行异构数据源的混合计算，不必使用数据库做中转或暂存，不需部署专用的计算数据库，没有额外的时间损耗，成本低且高性能。还支持廉价横向扩展，可进一步提升性能。集算器具有丰富的结构化数据计算函数，可轻松实现数据整合中的业务逻辑，提高开发效率。
发表了博文《用集算器实现跨行组计算报表》跨行组计算类报表在报表开发中非常常见，如常见的同期比、环比计算、移动平均值计算等。这类报表由于经常要引用其他行列的数据进行相对/绝对位置运算，使得报表工具在实现http://t.cn/RPtSYfe
#库外计算减轻数据库扩容压力及吞吐瓶颈#信息爆发导致了企业数据量的持续增长，针对数据库的应用不断增多，并发访问越来越密集，数据库需要不断扩容来应对这些变化。然而，仅仅对数据库本身扩容难免陷入高成本低成效的窘境，企业应当使用库外计算来减轻数据库的扩容压力和吞吐瓶颈。
发表了博文《集算器的集合思维》1、集算器中的序列与集合和传统的程序设计语言不同，集算器中，集合的应用非常普遍，实际上集算器中的序列就是一种集合。使用集算器时，需要特别重视对集合概念的理解。序列如同整数http://t.cn/RPcmKvL
#库外计算减轻数据库扩容压力及吞吐瓶颈#数据库扩容的主因往往是冗余数据，冗余数据不必存储于数据库，冗余数据还会导致性能瓶颈。可以看到，扩容时将冗余数据放在数据库中有很多弊端：代价高昂，可管理性差、减压效果有限，资源严重浪费。
发表了博文《集算器的引用思维》1、外键引用在各种关系数据库中，都能见到外键的概念。在一个关系表中，可以定义其中的某个或者某些字段为外键，外键字段中的数据可以与另一个表中的数据产生关联。例如，在比赛成绩http://t.cn/RPfGvfK
#库外计算减轻数据库扩容压力及吞吐瓶颈#相对的，文件扩容是一种成本低廉、管理方便、资源利用率高，减压效果明显的方式。文件扩容就是将不断增长的冗余数据存储在文件中，利用操作系统提供的开放接口直接访问文件，以此来达到并发访问、数据计算、数据管理的目的。如下图：
#库外计算减轻数据库扩容压力及吞吐瓶颈#文件扩容有四个优势：成本低廉、管理方便、资源利用率高、性能提升显著。但有一个关键的缺点，即文件本身没有计算能力，我们需要特定的工具才能实现这种库外计算。R语言、MapRreduce、高级语言、esProc这类工具都可以实现库外计算，它们各有优缺点。
发表了博文《集算器的序号思维及定位计算》1、成员访问集算器中的集合都是有序的，因此可以用成员在序列中的序号来引用。灵活运用序号可以更充分地发挥集算器的能力，使运算更为简捷高效。集算器中在使用某些函数时http://t.cn/RPIaiXM
#库外计算减轻数据库扩容压力及吞吐瓶颈#R语言是科学家的计算工具，扩展包非常丰富，计算能力很强大，但它的语法和函数过于专业，并不适合普通程序员理解。R主要用于桌面计算，因此很难集成到报表工具或JAVA、C#等应用中。另外，R的并行计算能力很弱，需要配合第三方组合才能使用。
#库外计算减轻数据库扩容压力及吞吐瓶颈#MapReduce的并行计算能力很强大，廉价扩展是它的最大优势，它和JAVA可以无缝集成，对程序员非常友好。但MapReduce没有提供底层计算函数，所有的基本运算都需要程序员硬编码完成，开发工作量很大。另外，MapReduce为强容错性而导致的性能低下也是个不争的事实。
发表了博文《集算器序列序表及排列的概念》序列、序表、排列是集算器中最常用的数据类型，本文将阐明它们之间的关系和各自的特性。序列是有序的泛型集合集合性：序列由多个数据构成,这些数据被称为序列的成员,成员http://t.cn/RPMWl76
#库外计算减轻数据库扩容压力及吞吐瓶颈#JAVA、VB、Perl等高级语言也可以实现库外计算，当然，它们的开发难度就更大了，甚至连并行计算框架都需要程序员手工完成。
#库外计算减轻数据库扩容压力及吞吐瓶颈#集算器的单机性能接近或超过数据库，它也支持廉价扩展和并行计算，因此整体性能表现优异。它支持JDBC输出接口，可以方便地集成到报表工具和JAVA，它内置了大量针对结构化数据计算的库函数，开发难度也较小。但集算器对大规模集群支持不佳，这点不如MapReduce。
发表了博文《集算器序列的基本运算》一些数据构成的有序集合即称为序列，构成序列的数据称为其成员。序列相当于高级语言中的数组，但其成员的数据类型不要求一致。下面通过生成、访问、运算符、函数等几个方面讲解序http://t.cn/RPSO6YI
发表了博文《集算器序表和排列的基本运算》集算器序表是有结构的二维表，具有字段、记录、主键、索引的概念，这些概念继承自关系数据库中的数据表。序表还是泛型和有序的显式集合，可以更加灵活地进行结构化数据的计http://t.cn/RPK5Nvk
发表了博文《集算器的集合运算符》集算器中，集合的使用无处不在，因而也提供了全面的集合运算。1、集合的双目运算集算器中最基本的集合就是序列，下面来看看两个序列A和B间的一些基础双目运算。A|B和列，简单http://t.cn/RPplLVu
#报表工具与大数据#大数据时代，作为数据呈现的主要环节，报表工具应当怎样适应大数据？我们经常看到用户希望报表工具能支持大数据，也经常看到某些报表工具宣称支持大数据，那么，这在技术上到底意味着什么？
#报表工具与大数据#事实上，报表的呈现部分和大数据并没有直接关系。报表是给人看的，人类的视觉能力不可能一次看太多的数据，上万个数据同时呈现已经超过了人的极限。报表本身没有呈现大数据的必要，从这个意义上讲，报表工具的呈现部分没必要在容量上支持大数据。
发表了博文《集算器中的常数》在使用集算器计算时，经常会用到常数，有时还会直接把数据存储在网格中。在这里，我们来了解一下集算器中常数的使用。1、在表达式中直接使用常数在集算器的表达式中，可以直接使用常数http://t.cn/RP0k1TR
#报表工具与大数据#报表最后呈现的数据可能很少，但涉及的源数据很可能是巨大的，这些巨大数据的计算处理不应当由报表工具的呈现部分来完成，而报表工具应该与大数据计算方案很容易的集成，或者具备相对独立的大数据计算引擎，才能称之为支持大数据。
#报表工具与大数据#数据库是最常见的能处理大数据的计算方案，而所有的报表工具都能够利用数据库来完成数据计算。但是，有些报表的计算较为复杂，使用SQL实现会非常困难，这时，程序员就会采用报表工具呈现部分的直观计算方式来完成数据的计算，从而导致报表工具的呈现部分要直接处理大数据。
#报表工具与大数据#而报表工具的呈现部分大都采用内存计算方式，并在计算过程中带有呈现属性，这样不仅性能低下，而且很容易造成内存溢出。
发表了博文《集算器的外键与表间关联》在关系数据库中，常常用外键来处理表间关联，在集算器中，也可以用外键字段表现这种对应关系。1、计算列与外键字段集算器中可以用T.derive()函数为序表添加计算列，http://t.cn/RPWtwGS
#报表工具与大数据#仅仅依靠数据库来支持大数据计算是不够的，很可能由于SQL的编写困难导致大数据处理被转移到报表工具呈现部分。我们需要比SQL更方便的计算方案，使得报表工具可以完全专注于要呈现的那部分小数据上。
#报表工具与大数据#现在流行的大数据方案Hadoop可以吗？HADOOP的对外接口是自定义风格的API，很少有报表工具能直接访问HDFS中的数据，更不用说基于这些数据做报表。所以，对于大多数报表工具而言，Hadoop可用的接口只有类数据库的JDBC 的SQL接口，如Hive，这和普通关系数据库没有区别能力会更弱一些。
发表了博文《润乾报表与集算报表的计算性能测试》1、测试目的在相同的硬件和web容器上测试润乾报表和集算报表的性能，对比在报表中完成分组、排序、过滤、连接、排名的性能差异，以及并发情况下二者的表现。测试http://t.cn/RPlCHLZ
#报表工具与大数据#集算报表内置了开发语言集算器专门用于数据计算。集算器的服务器是集算报表的可选组件，支持并行数据计算，是大数据计算的利器。集算器能提供比SQL更敏捷的编程能力，也提供外存及并行计算能力。
#报表工具与大数据#集算报表的呈现部分可以从集算器获取大数据处理的结果，而不需要直接处理大数据。集算报表还可以通过esProc来访问和计算HDFS中的数据。
#报表工具与大数据#集算报表对大数据的支持具体介绍如下：集算报表的集算器提供比SQL更方便的计算能力，特别是有外存及并行计算能力，可以相对独立的处理大数据计算任务。经过对比发现，同样的数据计算目标，集算器可以用更少的代码实现，而且脚本更接近自然思维，可以降低开发难度，减少维护成本。
#报表工具与大数据#集算器之所以比SQL更敏捷、高效，是因为集算器除了提供完备的结构化、半结构化计算类库之外，还提供了SQL不具备的能力。包括：分步计算，更彻底集合化，有序计算，对象引用等。
#报表工具与大数据#集算报表的集算服务器支持多机并行，并行计算架构非常简洁，开发难度要远远低于Mapreduce。子程序从各种异构数据源中取得巨量数据，并行计算后汇总给主程序。这个过程中，少量数据可以存放在内存中。数据量大，可使用集算器提供的外存计算类库，方便有效的解决报表内存溢出的问题
#报表工具与大数据#集算报表可以通过集算器访问和计算HDFS中的数据。  大多数报表工具是无法直接访问HDFS中的数据文件的，但是集算报表可以通过内置的集算器编程语言来实现这个需求。集算器支持包括HDFS在内的多种异构数据源，可以很方便的取数、存数。具体的代码如下图：
#报表工具与大数据#集算报表调用集算器的方式直观简洁。 在集算报表中，复杂的大数据计算完全由集算器来独立完成了，报表呈现部分可以调用和接收计算结果，直接呈现。调用的方法如下图：上图中的ds1、ds2、ds3是从集算器的程序中，返回三个结果集。dfx文件的名字，就是集算器程序文件的名字
发表了博文《报表的数据组织：文件还是数据库？》在报表开发项目中，报表的源数据可以放置在数据库中，也可以放在文件里。比如，一个互联网公司的网站运营报表系统，公司注册用户的基本信息来自于网站系统，使用的是http://t.cn/RPQvGJV
#复杂报表复杂在哪#报表开发者总会遇到一些较为复杂的报表，这类报表的数目通常很少，但花费的开发时间却很多，有时候还会变成疑难问题。以前的复杂报表主要复杂在前端：单元格合并，斜线表头；字体风格根据数据大小发生变化；任意单元格之间的计算；片区之间有规律的计算；不规则分组。
发表了博文《集算器序表和SQL数据表的异同》集算器序表和SQL数据表都是有结构的二维数据对象，都有记录、索引、主键的概念，都可以应用于结构化数据的计算。虽然都可以应用于结构化数据的计算，但两者的应用场http://t.cn/RP8cMqj
#复杂报表复杂在哪#报表工具经过十年的发展，上述前端难题大都已经得到了妥善的解决，比如Style Report、Runqian Report、QlikView、Tableau，它们各自用不同的方法解决了上述难题。现在的报表主要复杂在后端，即数据源的计算。
#复杂报表复杂在哪#复杂的业务逻辑；跨库计算；非数据库数据源的计算；多源合并为单源。常见的报表工具只负责将取到的数据呈现出来，不涉及后端数据的生成，报表开发者必须自己想办法解决上述问题，因此报表后端的复杂性一直是困扰报表开发者的最大障碍，也是复杂报表之所以显得复杂的主因。
发表了博文《润乾集算报表的层次数据集理解》润乾集算报表提供了层次数据源支持，在集算器中完成表间关联后可以将带有主从结构的数据集（如关联后的维表、事实表）直接给报表使用，而不需要在报表中再次关联；同样集http://t.cn/RPEXIrQ
#复杂报表复杂在哪#现代报表讲究简洁易读，用户对复杂样式的要求在逐渐降低，而对数据本身的关注程度更高，复杂报表的重点早已从前端呈现转移到后端数据源。事实上，前端的复杂性也大多可以通过后端来解决，比如片区之间有规律的计算、不规则分组，这就使报表数据源的计算更加重要。
#复杂报表复杂在哪#解决报表中复杂的数据源计算，可以采用SQL\SP，中间数据库、自定义数据源等三种方式。
#复杂报表复杂在哪#SQL\SP理论上可以解决复杂的业务逻辑，但一方面仅限于单数据库的情况，对于其他情况无能为力;另一方面，复杂业务逻辑并非普通的报表开发者就能轻易实现，往往需要调配更加资深的程序员。由此可见，SQL\SP能解决的问题有限，对人员的要求较高，不足之处非常明显。
#复杂报表复杂在哪#中间数据库可以用来实现跨库计算,中间数据库一般需要单独配置，会增加额外的成本负担。另外，中间数据库有一个加载的过程，实时性比较差。中间数据库的不足之处是成本高、开发工作量大、实时性和性能得不到保障。
发表了博文《集算器的选项语法》1、集算器中的函数选项集算器中，很多函数都可以使用函数选项。通过函数选项，同一个函数可以有不同的工作方式。函数选项的基本格式是f@o(…)，o就是函数f的选项。如：我们可http://t.cn/RPmUAxV
#复杂报表复杂在哪#非数据库数据源的计算也可以采用中间数据库的办法，优缺点也大致相同，区别主要在实时性和成本上。首先，非数据库数据源难以增加触发器和时间戳，无法实现实时计算。其次，很多非数据库数据源的数据量较大，会占用宝贵的数据库存储空间，成本更高。
#复杂报表复杂在哪#自定义数据源是大部分报表工具都会提供的接口，解决多源合并为单源的问题比较方便，其中最常见的是用户自定义Java Bean。对于一般甚至是较为简单的算法来说，用高级语言实现都极为困难。
#复杂报表复杂在哪#R语言也可以用作自定义数据源。它的优点是库函数丰富，可以进行混合计算，缺点是没有JDBC接口，在性能和稳定性也较差，所以实践中很少有人用它来解决报表数据源中的复杂计算。
发表了博文《集算器的循环代码》集算器中，循环代码主要通过for命令来实现。for语句将重复执行以其为主格的代码块，有如下几种格式：1、for循环无条件循环，主格的值依次为当前循环计数，通常需要用brehttp://t.cn/RPuKZtt
#复杂报表复杂在哪#润乾公司开发的集算报表不仅可以很好的实现报表的复杂展现问题，也可以很好的完成报表中复杂的数据源计算任务。
#复杂报表复杂在哪#集算报表内置了集算器，是自定义数据源编程的利器。和SQL类似，集算器是专业的数据计算语言，具有丰富的结构化数据计算函数，可以轻松解决第一类难题：复杂的业务逻辑。类似R语言，通过集算器可以直接进行数据库、文本文件、Excel、半结构化数据的混合计算，无需中间库暂存，
#复杂报表复杂在哪#因此能够实现高性能低成本的跨库计算和非数据库数据源计算。集算器面向应用开发者，语法简单，代码易于书写，交互性强，调试功能完善，因此对开发者的技术要求较低。
#复杂报表复杂在哪#集算报表可以通过jdbc方式调用集算器，也可以通过定义“集算器数据集”来直接调用。集算报表内置集算器单机并行计算引擎，可以将充分利用多CPU或者多CPU核的计算资源，性能表现优异。
发表了博文《报表工具与报表性能的关系》在选择报表工具时，性能指标一向是用户非常关心的，但是，报表工具的性能和整个报表系统的性能会有多大关系呢？要回答这个问题，首先要分析一下报表的处理过程包含哪些环节，http://t.cn/RPd4WGb
#零编码制作报表#许多报表工具都宣称可以零编码制作报表，只需要拖拽就能完成报表的开发，事实上是这样吗？有不少简单的报表可以通过拖拽完成，比如分组、交叉报表。报表工具近年来的发展又进一步扩大了这个范围，有不少多源关联的报表也能通过拖拽再加简单的公式填写即可完成，基本上算作是零编码。
发表了博文《集算器的游标思维》使用集算器，可以方便地处理结构化的大数据，顺利完成大数据的计算和分析。由于大数据表无法一次读入内存，在处理大数据时，最基本的处理方案就是使用游标。1、游标的基本原则集算器http://t.cn/RPgKVog
#零编码制作报表#仍然有一些复杂的报表无法用报表工具完成，特别是数据源计算如果比较复杂的话，不写代码是无法实现的。分析其原因如下：1、 原始数据库结构一般为交易系统设计，不适合统计报表直接展现，导致从原始数据得到报表数据的业务逻辑非常复杂，必须写代码来实现。
#零编码制作报表#2、即使是经过数据整理的数据仓库，其结构也不能适合所有的报表，特别是项目后期出现的新报表，一般都要在数据仓库的基础上做进一步复杂计算才能提交给报表工具来展现。
发表了博文《集算器游标的聚合运算》大数据表中的数据量往往非常庞大，这使得我们无法取出大数据表中的全部数据，因此，有关大数据表的数据处理的目的，一般是两种：用cs.fetch()每次取出部分数据，或者对http://t.cn/RPD9jux
#零编码制作报表#复杂报表虽只是报表项目的一部分，但因实现难度大，最终占用的工作时间反而比常规报表更多。而且也决定了我们不能100%实现零编码制作所有报表，在报表项目中需要将报表工具制作的模板和对应的报表模板合理地组织管理。这种情况下，我们有必要想办法提高编码效率、降低代码的管理难度。
#零编码制作报表#现有的数据计算程序语言有什么需要改进的么？一、现有编程语言实现报表数据准备和计算，难度大、效率低、性能较差。
#零编码制作报表#实际项目中，报表开发人员必须编写一些很长很复杂的SQL语句（存储过程），或者采用Java、C#程序来为报表计算和准备数据。报表开发人员会发现，使用SQL（存储过程）或者程序语言来实现复杂统计运算非常困难。特别是与序和集合有关的运算
发表了博文《集算器的多层次参数》在集算器中提供了大量的函数。在很多函数用到的参数都比较多，为了比较清楚地判断函数参数的位置，便于读写，在集算器中特别提供了多层次的函数参数分隔符。1、函数参数的分隔符集http://t.cn/Rhv42ez
#零编码制作报表#对于更复杂的业务逻辑，会出现多层嵌套、众多窗口函数的SQL语句，可以达到几十甚至上百行。这些复杂SQL不符合自然思维习惯，不仅编写调试困难，也难以维护，时间长了即使编写者自己也需要花费较多时间重新理解。
#零编码制作报表#而且，复杂SQL执行起来一般都比较慢，会出现最终用户长时间等待报表的情况。因为难以完整指定数据库的执行路径，报表开发人员想人工优化这些复杂SQL的时候也会发现很难入手。
#零编码制作报表#二、现有编程语言代码与应用系统其他模块耦合过于紧密，代码管理困难。SQL和存储过程的脚本、中间表和其他功能模块的存储过程会出现交叉引用。Java代码或者C#代码更是这样。当报表数据计算的需求发生变更的时候，要在错综复杂的程序代码和网状结构的数据表中去修改代码和数据结构。
#零编码制作报表#由于这种紧密耦合的关系存在，当报表数据计算需求变更的时候，需要程序代码重新编写、重新编译、重新测试打包，甚至会需要改动应用系统程序和表结构。润乾公司推出的集算报表可以很好的解决上述问题。集算报表内置集算器开发语言，可以有效地降低报表计算代码编程难度，提高编程效率。
发表了博文《集算器的分支代码》在分支代码中，我们需要检查一个或者多个条件，根据检查结果决定执行不同的代码，或者返回不同的结果。集算器中实现分支结构的语句是if/else，if/else可以有如下几种格http://t.cn/Rhzh2Ey
#零编码制作报表#一、集算报表的自定义集算器代码更符合自然思维习惯，解决同样问题会比SQL短数倍，易于调试和维护，可以有效提高写代码的效率；而且，在集算报表的集算器程序中，是由程序员决定执行过程，更易于优化性能。
#零编码制作报表#二、集算报表可以实现报表数据计算代码与应用系统代码的松耦合。集算报表通过esProc连接数据库的jdbc接口读取的数据，利用自带的数据计算类库处理之后，再把计算结果提交给集算报表的展现引擎。
#零编码制作报表#处理过程中产生的少量数据保存在内存中，大量数据保存在本地硬盘。因此，集算报表可以实现报表与其他模块之间完全的松耦合。报表展现发生变化的时候，修改报表模板；报表数据计算需求变更时，只要重新编写、更新计算脚本文件和临时数据文件，也无需改动应用系统程序和数据库表结构。
发表了博文《集算器的组游标》在大数据运算中，除了分组聚合运算，有时也需要每次取出一组的数据做分析。如按日期分析销售情况，统计每种产品的销售情况曲线，统计每个客户的进货习惯等。在集算器中，可以使用cs.http://weibo.com/p/230418e4de31d00102uzvf
#存储过程实现报表数据源#在报表项目中，当数据计算较为复杂的时候，报表开发人员可能会考虑是否用存储过程来实现报表数据源准备。这里，我们从几个不同的方面来看一下，用存储过程来实现报表数据源计算的利和弊
#存储过程实现报表数据源#一、性能：说到存储过程的优点，性能是最常被提及的。存储过程进行报表数据计算的时候，不需要将数据取出数据库，会获得较高的性能。其主要原因是数据库IO通道（例如：JDBC）效率一向很差，大量数据取出来很费时间。
发表了博文《集算器中的二进制文件》在集算器中，经常使用两种数据文件：普通的txt文本文件和二进制文件。其中，二进制文件使用了低CUP消耗的压缩编码，在存储时会比未经压缩的文本文件容量更小，同时在读取时http://t.cn/RhLhQLh
#存储过程实现报表数据源#二、编程难度：存储过程是基于SQL的，所以SQL固有的问题，存储过程也无法避免：数据无序、缺乏集合、无法引用、分步不彻底。利用存储过程和SQL实现报表数据源计算需求的过程，事实上就是将业务问题翻译成存储过程和SQL语法的过程。
#存储过程实现报表数据源#存储过程的另一弊端是不易移植。和SQL相当标准化不同，存储过程用到的过程控制语法一般是不同厂家的数据库特有的，换了数据库基本上没法执行。如果报表项目需要访问多个不同种类的数据库，更是存储过程无法实现的。因为缺乏很好的开发工具，存储过程编程和调试相对比较困难。
发表了博文《集算器中活用字符串》在集算器中，字符串不仅仅是一种数据类型。字符串还可以作为宏或者字符串常数组成表达式，也可以用在eval_r()函数中，用来根据需要动态生成表达式。1、宏集算器中的宏，就http://t.cn/Rhy6QsZ
#存储过程实现报表数据源#三、代码管理：数据库中的存储过程提供了“包”的概念，对大量存储过程进行归类。但是除此之外，再无其它分类管理办法。而包只支持一层的分类，所以对于数量庞大的存储过程来说，容易造成管理混乱。在这种情况下，应该用“树”这样的多层分类管理代码。
#存储过程实现报表数据源#存储过程另一个特点是比较有争议的：在生产环境下，可以通过直接修改存储过程的方式修改报表的数据计算逻辑，而不用重启服务器。但这个“优点”同时也带来很大的弊端：有人直接就在正式服务器上修改存储过程，而没有经过完整的测试，程序正确性无法保证，代码管理也变得混乱。
发表了博文《集算器中索引序列的应用》在数据库中，对某些表正确地建立索引，可以使得相关的查询效率大大提高。同样，在集算器中，也可以为排列或者序表建立索引序列，以提高反复查询数据时的效率。如下例，我们需要http://t.cn/RhUjUYa
#存储过程实现报表数据源#四、系统维护：存储过程需要编译才能使用，修改报表数据计算算法时要DBA的配合，需要数据库的写权限，增加安全风险。存储过程需要预编译，如果带有引用关系的对象发生改变时，受影响的存储过程将需要重新编译，增加维护工作量。
#存储过程实现报表数据源#经过上述分析，我们认为写存储过程来实现报表复杂数据计算总体来讲是弊大于利的。一般情况下不建议这样做，实在因为数据量导致的性能问题需要用，也要尽量把应用范围压到最小。
#存储过程实现报表数据源#对于希望由存储过程解决的复杂数据源问题，可以考虑采用润乾公司开发的集算报表来实现，集算报表内置的开发语言集算器（esproc），相比存储过程而言，在多个方面都具备优势
#存储过程实现报表数据源#在性能方面，集算报表的集算器基于Java，代码解释执行的速度要快于存储过程自身的控制代码。集算器提供并行执行能力，可以充分利用普通计算机和PC服务器来实现分布式计算集群，可获得远远超过存储过程的性能。
#存储过程实现报表数据源#如果业务允许，可以考虑将数据库中的报表相关数据移到文件系统中。集算器的文件访问和计算能力使得集算报表可以将数据文件作为数据源，充分发挥数据库和数据文件各自的优点，在有效降低数据库压力的同时，进一步提高集算报表的性能。
发表了博文《集算器中游标的有序归并与连接》1、有序归并在很多时候，数据可能会存储在多个数据表中，如多种产品的销售记录，各部门员工的资料等。在这种情况下，我们需要将多个数据表中的数据合并在一起使用。对于http://t.cn/Rh4jQhF
#存储过程实现报表数据源#在编程难度方面，集算器解决了SQL固有的问题，更接近自然思维，更快速的写出报表数据计算程序，也非常容易读懂、维护。用集算器解决同样问题的代码长度要远远少于存储过程。而且，集算报表是跨平台和数据库的，很容易移植。也可以从多种数据库、文件中取数，统一进行计算。
#存储过程实现报表数据源#同时，集算报表提供功能强大的集算器集成开发环境（IDE），降低编程工作量，提高代码调试的效率。
#存储过程实现报表数据源#在代码管理方面，集算报表的程序文件（dfx文件）可以在操作系统中形成树形的结构，形成多层分类管理。集算报表的程序文件可以和Java文件一样进行基本的配置管理。如果需要的话，可以导出成文本文件进行更细致的版本管理。
#存储过程实现报表数据源#在系统维护方面，集算报表是在应用服务层运行的，程序改动无需数据库权限，不会带来数据安全上的问题。集算报表的集算器程序之间是通过函数的方式调用的，只要函数的接口不变，函数内部的变化不会影响报表本身或者其他集算器程序。
发表了博文《集算器的对位分组与枚举分组》在对数据库中的数据进行展现与分析时，经常需要对记录进行分组操作。虽然在SQL语句中使用GroupBy语句可以使记录对指定字段进行分组，但是这种分组是为汇总计算服http://t.cn/RhtmFKy
#自定义数据源是报表开发的常态#报表项目中，大部分报表经过简单的设计、制作即可完成。但总有一些报表需要自定义数据集才能实现。自定义数据集是指报表的数据源需要用报表工具提供的API，调用项目组人员开发的程序来实现。这种报表数量不多，但编程、调试工作量较大，在整个项目中占的时间反而更长。
#自定义数据源是报表开发的常态#那么为什么自定义数据集会成为报表项目的常态，每个项目中都会出现呢？我们知道，报表是由两部分组成的：数据计算和报表呈现。自定义报表出现的原因，是因为数据库中的原始数据结构与报表中要展现的数据结果之间差异较大，造成报表数据计算过程比较复杂。
发表了博文《在集算器中清除格值减少内存占用》集算器的网格变量的存储无处不在。单元格的值可以很方便地在计算中引用，但是，也会带来占用内存的问题。当一个格子中的数据已经完成了参与计算的使命时，我们可以把它http://t.cn/Rhc3nHR
#自定义数据源是报表开发的常态#有些报表连接的是生产数据库，数据结构不适合直接展现，要写比较复杂的程序，将数据计算成报表需要的结果。如果报表连接的是数据仓库，其数据结构也不一定适合所有的报表，特别是项目后期出现的报表，一般都要在数据仓库的基础上做进一步复杂计算才能在报表中展现出来。
#自定义数据源是报表开发的常态#出现自定义数据源的另外一个原因，是报表工具需要连接多个数据库或者其他种类的异构数据源。比如：多个oracle、oracle和db2、数据库和文件等等。这个时候也需要写自定义数据源程序来取数据并且计算。
发表了博文《集算器对文本文件的处理》使用集算器（esProc）可以很方便地处理文本文件中的数据。这里我们通过例子来看一下集算器提供的文本文件处理功能，包括：如何导入各种不同的文本文件；对于较大的文本文http://t.cn/RhIQ5N5
发表了博文《集算器和R语言处理外存文本文件的对比》作为数据计算语言，集算器和R语言都提供了丰富的功能用来处理外存中的文本文件。两者在基本用法上有很多相似之处，但区别也很明显，比如处理列宽固定的文件、读http://t.cn/RhIQQVD
#自定义数据源是报表开发的常态#总之，编写自定义数据源程序处理复杂数据计算的好处是：无论数据源计算多么复杂，数据来自多少个不同的数据库或者文件，只要会写代码、肯写代码，一定能把所有数据集中到一起完成计算。但是，现有的编程手段，对于自定义数据源程序来说，并不是特别理想。
#自定义数据源是报表开发的常态#那么有没有新的开发工具，可以减少代码量，降低开发难度呢？集算报表是润乾公司新推出的报表工具，其内置一种创新的编程语言“集算器”，提供了大量的数据计算类库。用集算报表来实现自定义数据源编程，可以有效的降低开发难度，减少开发工作量、代码量。
发表了博文《润乾报表远程HTTP数据源方法及改进》报表的数据来源多种多样，有时会接收来自HTTP服务器的数据进行报表展现，润乾报表工具需要通过自定义数据源使用高级语言（JAVA）进行处理，这里通过一个http://t.cn/RhiNz9b
#多样性计算能力是数据整合的关键#数据整合是将分散的、不易用的多样性数据源整理成集中的、易用的单数据源的过程。数据整合需要多样性计算能力，包括：1.跨库计算能力，如连锁商场各门店都有自己的数据库，总部对门店数据进行汇总统计。
#多样性计算能力是数据整合的关键#2.非数据库的结构化数据计算，如将合同信息、付款信息整理为项目管理部门的项目付款进度，部分数据来自于Excel文件。3.半结构化数据的计算，如机场天气、巴士安排、航班信息需要联动响应，有些数据来自EDI，有些则来自WebService。
发表了博文《集算器序表对象与R的数据框对比》集算器和R语言都是典型的数据处理及分析语言，都具有二维结构化数据对象，都擅长多步骤的复杂计算。但两者的二维结构化数据对象在底层机制上存在较大的差异，这种差异http://t.cn/RhX73Uo
#多样性计算能力是数据整合的关键#数据整合过程通常要实现特定的业务逻辑，有时是获取源数据，有时是异构数据源混合计算，有时则是在整合后。具有行业特色的业务逻辑一般无法用现成的ETL功能来配置实现，需要用硬编码来计算完成，因此多样性数据计算能力尤为关键。
#多样性计算能力是数据整合的关键#   SQL是数据库查询语言，具有足够的结构化数据计算能力，可以用于实现业务逻辑硬编码，也常被当做数据整合工具。但SQL的多样性计算能力不足，尚不能很好地支持数据整合，这主要表现在：
#多样性计算能力是数据整合的关键# 1.SQL跨库计算在实践中表现不够好。数据库有一定的跨库计算能力，但在实践中却很少正式使用，这里有性能低的因素，也有稳定性差的因素，还有配置复杂和数据类型转换带来的麻烦。
#多样性计算能力是数据整合的关键#http://t.cn/zWdklPT不能直接计算库外的结构化数据。Txt文件、Excel等库外的结构化数据一般无法被SQL直接计算，需要经过清洗转换，再加载到数据库才能被SQL利用。为此往往需要额外部署一个计算用的数据库，需购买专用服务器存储设备、增加数据库管理员的工作负荷。
#多样性计算能力是数据整合的关键#2.不能直接计算库外的结构化数据。Txt文件、Excel等库外的结构化数据一般无法被SQL直接计算，需要经过清洗转换，再加载到数据库才能被SQL利用。为此往往需要额外部署一个计算用的数据库，需购买专用服务器存储设备、增加数据库管理员的工作负荷。
发表了博文《润乾报表实现动态数据源报表及改进》经常会遇到一些报表需要根据不同的情况（参数）连接不同的数据源从而完成相应的数据的展现，也就是经常说的动态数据源报表。报表工具通常的做法有两种，一是不同的情http://t.cn/Rha9AA2
#多样性计算能力是数据整合的关键#http://t.cn/Rha9Shx除了成本，额外的时间损耗更是个严重的问题。SQL不能直接计算库外数据，就需要先将数据插入数据库。它的I/O性能极低。即使经过优化，将数据复制到数据库也经常比直接复制到文件慢出1个数量级。
#多样性计算能力是数据整合的关键#3.半结构化数据的预处理工作量大。SQL对网站日志\Xml\电子邮件\Html等半结构化数据的支持不佳，需要进行复杂的字符串解析并转变为结构化数据再参与计算，这使SQL的开发的工作量进一步加大。
#多样性计算能力是数据整合的关键#从上面可以看出，SQL的多样性计算能力不足，导致数据整合的性能低、成本高、额外的时间损耗严重、开发工作量大。ETL脚本虽然支持多种数据源，但缺乏批量结构化数据计算函数，因此较难实现常规的业务算法，难以在数据整合中担任关键角色。
发表了博文《集算器的主键及其索引功能》集算器的序表中，可以指定某个或某些字段作为主键，基于主键的查找可以使用专门的函数，不仅可以简化书写，更能有效地提高计算性能。1、find和pfind主键是数据库表http://t.cn/RhSeiTw
#多样性计算能力是数据整合的关键#http://t.cn/Rha9Shx实现数据整合中的多样性计算，集算器是一个较好的选择。 它性能高、成本低、无额外时间损耗、开发工作量小，同时还具有丰富的批量结构化数据计算函数。
#多样性计算能力是数据整合的关键#http://t.cn/Rha9Shx自有引擎支持异构数据源。集算器可直接访问各种关系型数据库和NoSQL数据库，可以轻松实现异构或同构数据库的跨库计算。集算器也可直接读取Txt文件、Excel文件中的结构化数据，从而支持异构数据源之间的混合计算。
#多样性计算能力是数据整合的关键#http://t.cn/Rha9Shx 集算器内置文本分析器，支持字符串解析和正则表达式，可以直接处理半结构化数据，处理后的数据可直接参与混合计算。
#常见的内存分组#常见的内存分组计算包括等值分组、对位分组、枚举分组。等值分组：分组依据是数据集的字段（或字段派生的计算列），如将销售订单按订单年份、客户分组；对位分组：分组依据来自外部，如其他数据集的字段、用户构造的数组、参数列表等。对位分组可能出现空子集，还可能出现不完全分组。
#常见的内存分组#（续）枚举分组：分组依据可以是任意的布尔表达式，可能出现空子集、成员不属于任何分组、成员重复地属于多个分组的情况。更方便地实现各种分组的计算，请访问：http://t.cn/R7w2C53。
发表了博文《集算器协助java处理多样性数据源之mongodb》mongodb不支持join，其官网上推荐的unityjdbc可以把数据取出来进行二次计算实现join运算的，但这些join、grouphttp://t.cn/R7AssZR
#移动平均的计算#移动平均计算可以使时间序列变平滑，是典型的有序计算。基本算法是：将N个连续的时间序列成员作为一个集合，计算该集合的平均值，并逐项推移该集合。我们分别用R语言、Python、集算器esProc来实现，源代码请见：http://t.cn/R7L5LwM
发表了博文《集算器与R语言的循环函数对比》循环函数可以遍历数组或集合中的每个成员，可以将结构复杂的循环语句用简单的函数形式表达出来，可以减少代码量并提高可读性。集算器和R语言都支持循环函数，下面将对比http://t.cn/R7LcZAJ
#SQL式计算优化之分组关联#在数据库应用开发中，我们经常要处理复杂的SQL式计算，如多层分组中的关联计算。由于SQL分组必须同时汇总，且不能进行对象式关联访问，因此只能用窗口函数嵌套多层子查询的方法来实现。集算器支持真正的分组，直观的对象式关联访问，详细请见http://t.cn/R7quDa8。
发表了博文《集算器协助java处理多样性数据源之HDFS》Java通过Hadoop提供的API访问HDFS不算困难，但针对其上文件的计算就比较麻烦。比如分组、过滤、排序等计算，用java来实现都比较复http://t.cn/R7cE4Qr
#多样性数据源之HDFS#集算器esproc能很好地协助JAVA解决基于HDFS的计算问题，同时封装了HDFS的访问。借助esproc可以让java加强HDFS上文件的计算能力，结构化半结构化数据计算都可以轻松完成。
发表了博文《集算器简化SQL式计算之组内运算》在开发数据库应用时，经常会遇到分组后针对组内数据的运算问题，如：列出近3年每年都发表过论文的学生名单，统计全部参加了历次培训的员工，选出每位客户的高尔夫成http://t.cn/R7Mmk1R
发表了博文《集算器协助java处理结构化文本之表达式计算》JAVA不直接支持动态解析文本文件中的表达式，只能通过手工拆分字符串再递归调用来实现，这需要编写大量代码，过程复杂难以维护。使用集算器来辅助Jhttp://t.cn/R7Xk0eD
发表了博文《集算器协助java处理结构化文本之导入数据库》直接用JAVA将结构化文本文件导入数据库时，需要手工拼凑SQL语句，还需要处理各种麻烦情况，比如：表中数据是否已经存在，是要update还是要http://t.cn/R7SdaTy
发表了博文《集算器简化SQL式计算之分组关联》在数据库应用开发中，我们经常需要面对复杂的SQL式计算，比如多层分组中的关联计算。由于SQL分组时必须同时汇总，并且不能进行对象式关联访问，因此处理这类问http://t.cn/R7SgT95
发表了博文《集算器协助Java处理多样性数据源之Hive》Java使用jdbc连接Hive比较简单，但是Hive的计算能力相对于其它数据库的SQL而言较弱，要完成非常规的计算需要将数据取出后用Javahttp://t.cn/R7KSFZP
发表了博文《集算器协助java处理结构化文本之对齐连接》数据库有关联语句，可以方便地进行对齐连接运算，但有时数据是存储在文本文件中的，用JAVA直接计算需要写大量循环语句才能实现，代码繁琐且运行低效。http://t.cn/R7KKQLK
发表了博文《集算器协助java处理多样性数据源之json》java的json开源包一般只能解析json数据，没有运算功能。程序员自己写通用的程序来实现分组、排序、过滤、连接这些计算，相当麻烦。例如：用http://t.cn/R7CMO6n
发表了博文《集算器简化SQL式计算之竖排多层数据》在数据库应用开发中，我们经常需要面对复杂的SQL式计算，比如：将分组数据按顺序拼为一列，并将分组和明细标识为不同的类型，如下所示：此类算法常见于为报表http://t.cn/R7CxyHV
发表了博文《集算器入门之安装与基本使用》集算器是一款程序化数据运算工具，它能够执行各类数据分析与结构化计算，也可以自由访问数据库，完成在线数据分析。1、集算器的安装在下面的官方网站可以下载集算器的安装http://t.cn/R7pv36K
发表了博文《集算器协助java处理多样性数据源之HDFS》Java通过Hadoop提供的API访问HDFS不算困难，但针对其上文件的计算就比较麻烦。比如分组、过滤、排序等计算，用java来实现都比较复http://t.cn/R7pPO6m
发表了博文《集算器简化SQL式计算之最大值对应记录》在数据库应用开发中，我们经常需要取出最大值（或最小值）对应的记录而不是最大值本身，比如：每位员工涨薪最多的一次是哪次；高尔夫成绩最差的三次是哪三次；http://t.cn/R7jSk99
发表了博文《集算器协助java处理结构化文本之按组处理大文件》有这样一类文本文件：文件太大无法全部读入内存计算；但数据已按某列排序，如果以该列为标准每次读取一组数据，则可以放入内存进行计算。电信通话记http://t.cn/R7jo0G9
发表了博文《集算器序表和SQL数据表的异同》集算器序表和SQL数据表都是有结构的二维数据对象，都有记录、索引、主键的概念，都可以应用于结构化数据的计算。虽然都可以应用于结构化数据的计算，但两者的应用场http://t.cn/R7TAmWa
发表了博文《集算器协助java处理多样性数据源之Excel》Java程序员读取和计算excel的程序一般要使用poi或其它开源包，这些开源包对编程的支持较为底层，整体学习成本和操作复杂度都很高。使用集http://t.cn/R7T2NoQ
发表了博文《集算器入门之基本数据类型》1、集算器中的数据类型在集算器中，有以下几种基本数据类型：&#61656;&Oslash;整数-231~231-1之间的整数，即取值范围-2147483648~2http://t.cn/R7HuHQN
发表了博文《桌面端数据分析程序语言》桌面端数据分析程序语言，其重点是使用方便且计算能力强。考察某种语言是否适合进行桌面端数据分析，可以用六个指标来�量：应用环境、文件处理、文本和字符串处理、结构化数据http://t.cn/R7H3qUw
发表了博文《集算器协助java处理结构化文本之非单行记录》集算器能够协助java处理结构化文本的各种计算工作，但碰到非单行记录的情况就不能直接计算了，这时需要先进行一些必要的变换处理。比如，文本文件Shttp://t.cn/R788Z75
发表了博文《集算器协助java处理结构化文本之数据读入》JAVA只提供了指定分割符等最基本的数据读入功能，而其他常见功能都需要自己从底层去实现，比如：按列名读入指定列、指定列的次序、指定数据类型、无分http://t.cn/R7Evsqt
发表了博文《集算器协助java处理结构化文本之集合运算》JAVA不直接支持集合运算，因此要用嵌套循环才能实现文本文件之间的交集、并集、差集等集合运算，如果文件数量较多，或者文件较大而无法放入内存直接计http://t.cn/R71qmGC
发表了博文《集算器协助java处理多样性数据源之mongodb》mongodb不支持join，其官网上推荐的unityjdbc可以把数据取出来进行二次计算实现join运算，但这些join、group、http://t.cn/R7rLX3y
发表了博文《集算器协助Java处理结构化文本之分组汇总》直接用Java实现文体文件分组汇总会有如下的麻烦：1、文件不是数据库，不能用SQL访问。当分组、汇总表达式变化时，只能改写代码。而要实现灵活表达http://t.cn/R7dDTSG
发表了博文《集算器协助java处理多样性数据源之跨库关联》Java的数据计算类库RowSet提供了JoinRowSet和FilteredRowSet类，可以进行跨库的关联计算，但是有很多局限。首先，Jhttp://t.cn/R7DZNCM
发表了博文《集算器协助java处理结构化文本之排序》直接用Java实现文本文件排序，对于小文件还较为简单，如果是内存装不下的大文件，需要分段读入数据，再将每段排序结果写成临时文件，最后归并这些临时文件http://t.cn/R7kXFPZ
发表了博文《集算器简化SQL式计算之固定分组》在数据库应用开发中，我们经常需要面对复杂的SQL式计算，固定分组就是其中一种。固定分组的分组依据不在待分组的数据中，而是来自于外部，比如另一张表、外部参数http://t.cn/RzPdejt
发表了博文+《集算器简化SQL式计算之行列转置》+-++http://t.cn/Rz7btMN
发表了博文《集算器协助Java处理结构化文本之条件过滤》直接用Java实现文本文件中数据按条件过滤会有如下的麻烦:1、文件不是数据库，不能用SQL访问。当过滤条件变化时需要改写代码。如果要实现象SQLhttp://t.cn/RzZAPz9
发表了博文《集算器入门之单元格编辑》1、复制粘贴单元格在集算器中，直接使用Ctrl+C和Ctrl+V，可以将单元格中的数据或者表达式，复制下来粘贴到目标单元格中。但是，与EXCEL不同，单元格复制粘贴http://t.cn/RzwSEUR
发表了博文《集算器简化SQL式计算之行间计算》在数据库应用开发中，我们经常需要面对复杂的SQL式计算，行间计算就是其中一种，比如用每月的销售额除以上月的销售额，求比上期，或用每月销售额除以去年同月的销http://t.cn/RzAdcwq
发表了博文《日常数据分析的主要内容仍是结构化计算》日常业务中会出现各种各样的数据分析问题，但究其本质，其主要内容仍然是结构化数据的计算。比如：指定时间段，计算各营业网点的月销售额比上期和同期比。实现思http://t.cn/RzUuzCd
??????????????????????????????????????????????????????????????????????????????????????????1??????1.1http://t.cn/Rzbt9zF
发表了博文《集算器协助MongoDB计算之本地化排序》对于本地化语言（例如：中文），MongoDB是按照UNICODE编码排序，而不是根据本地语言的编码排序。用esProc结合MongoDB可以方便的http://t.cn/Rzq4Fqu
发表了博文《集算器简化SQL式计算之固定排序》在数据库应用开发中，我们经常要面对复杂的SQL式计算，固定排序就是其中一种。固定排序不是按照某个字段升序或降序排序，而是有着固定的顺序，比如按照2,3,1http://t.cn/Rz5NpXc
发表了博文《集算器简化SQL式计算之多级关联》在数据库应用开发中，我们经常需要面对复杂的SQL式计算，多级关联就是其中一种。SQL的join语句比较抽象，只适合表达较简单的关联关系，一旦关联的层级较多http://t.cn/RzcAptD
发表了博文《集算器协助MongoDB之表间关联》MongoDB不支持join，其官网上推荐的unityjdbc可以把数据取出来进行二次计算实现join运算，但收费版才有这个功能。其他免费的jdbcdrhttp://t.cn/RzMBxmq
发表了博文《集算器关联运算之分组与汇总（1）》在分析和统计数据时，将表中的记录按需要分组，并对各组中的数据进行汇总，是很常见的任务。如计算总和、平均值等汇总数据，或者列出前n个数据等。在这里，我们将研http://t.cn/RzJNryB
发表了博文《集算器关联运算之分组与汇总（2）》接集算器关联运算之分组与汇总（1）.分组时，同样可以根据某个表达式，将结果相同的数据分在一组中。如A4中按出生年份将员工分组，结果如下：group函数类似http://t.cn/RzJpfyo
发表了博文《集算器简化SQL式计算之多层固定分组》在数据库应用开发中，我们经常需要面对复杂的SQL式计算，多层固定分组就是其中一种。实现该算法的核心思路是用leftjoin语句将源数据按照固定的依据对http://t.cn/Rz6DNAt
发表了博文《集算器入门之JDBC基本使用》集算器可以嵌入Java应用，使用类似JDBC的连接，就可以调用集算器编写的网格程序。调用方法与存储过程相同。下面将简单讲述JDBC的基本用法。1、集算器JDBhttp://t.cn/RzaFThI
发表了博文《集算器简化SQL式计算之各组前N行》取出各组的前N行数据是较常见的运算，比如：每位员工涨薪最多的一次是哪次；高尔夫成绩最差的三次是哪三次；每个月，每种产品销量最高的五天是哪五天。在SQL中http://t.cn/Rzol8OC
发表了博文《集算器协助MongoDB计算之交叉汇总》MongoDB实现交叉汇总比较困难，如果将数据取出，用Java等高级语言来汇总的话，也相当复杂。因此，可以考虑用esProc辅助MongoDB完成交http://t.cn/RzpE6jQ
发表了博文《集算器序表对象与R的数据框对比（1）》集算器和R语言都是典型的数据处理及分析语言，都具有二维结构化数据对象，都擅长多步骤的复杂计算。但两者的二维结构化数据对象在底层机制上存在较大的差异，这http://t.cn/RzOfi2W
发表了博文《集算器序表对象与R的数据框对比（1）》上接：集算器序表对象与R的数据框对比（1）实际案例下面，我们通过一个实际案例对序表和数据框进行综合比较。计算目标：通过日交易数据，从多只蓝筹股中选出连http://t.cn/RzOfDnM
发表了博文《集算器简化SQL式计算之固定分组》在数据库应用开发中，我们经常需要面对复杂的SQL式计算，固定分组就是其中一种。固定分组的分组依据不在待分组的数据中，而是来自于外部，比如另一张表、外部参数http://t.cn/RzlfBbY
发表了博文《集算器协助mongodb计算之子查询》Mongodb不支持子查询，碰到这些复杂的运算就只能先将数据读出后再计算，而用Java等语言编写这类计算也不是很简单，这时可以考虑用esProc辅助实http://t.cn/RzjEEw5
发表了博文《集算器协助mongodb计算之数位比较》Mongodb脚本解决复杂问题的计算能力有限，直接使用时较为吃力。很多情况下需要将数据读出后在主程序中进一步完成运算，而在Java等高级语言中编写这http://t.cn/RzTJ6d8
发表了博文《集算器计算mongodb之数组查下标》Mongodb可以按照下标查出内嵌数组的元素，但是不能通过元素的值来查询下标。例如：数组中的元素是按照排名的先后顺序存放的人员姓名，mongodb可以http://t.cn/RzEL7Fa
发表了博文《集算器文本处理之大文件集合运算》在进行文本处理时，经常会遇到对大文件进行集合运算的情况，比如找出两个文件不同的行数据。用命令行的grep\cat命令处理此类问题时，写法很简单，但效率太低，http://t.cn/Rznrn1c
发表了博文《集算器文本处理之大文件匹配》在进行文本处理时，经常会遇到对大文件进行字符串匹配情况。用命令行的grep\cat命令处理此类问题时，写法很简单，但效率太低，用高级语言处理此类问题虽然可以获得http://t.cn/RzuLpQR
发表了博文《集算器文本处理之批量文件抽取》在进行文本处理时，有时候需要从多级目录的多个文件中取出某些数据。命令行难以处理较复杂的过程，而高级语言虽然可以实现这种算法，但代码比较难写，再加上可能存在大文http://t.cn/Rz3ynIW
发表了博文《集算器文本处理之大文件条件查询》在进行文本处理时，经常会遇到对大文件进行条件查询的情况。用命令行的grep\cat可以处理一些简单情况，写法很简单，但效率太低，用高级语言处理此类问题虽然可http://t.cn/Rz18BNW
发表了博文《数据处理程序语言中的基本数据类型》程序语言根据其设计目的不同，其侧重的基本数据类型也不同。JAVA、C#等语言被设计用来进行通用的应用程序开发，其基本数据类型是字符串、数字、布尔等原子数据http://t.cn/RzeM6kM
发表了博文《集算器集成与应用之授权与加密》1、文件加密为防止未经许可查看或访问网格文件，集算器提供了网格文件加密功能，加密有如下两层权限：执行权：可以填写参数并执行网格。可以查看网格描述以及单元格提示http://t.cn/Rzkw3N6
发表了博文《集算器集成与应用之授权与加密(2)》2、授权与注册码集算器的版本通过注册码来控制，不同版本支持的功能是有差异的，各个版本的具体情况，以及获得注册码的途径，请参阅官网。获取注册码后，可以在集http://t.cn/Rzk2NwI
发表了博文《集算器文本处理之批量替换》在进行文本处理时，有时候需要根据配置文件替换源文件中的多组字符串。命令行可以替换单组字符串，但难以进行批量替换，高级语言当然可以完成这项工作,但需要编写复杂的多层http://t.cn/RzFFsWq
发表了博文《集算器关联运算之对位与枚举分组》在集算器关联运算之分组与汇总一文中，我们了解了如何根据表中的数据，按需要分组，并计算汇总结果。需要注意的是，在分组汇总时，会根据值是否相等，将各组按照分组字http://t.cn/RZvHiHv
发表了博文《集算器集成与应用之自定义函数》在集算器中，除了使用系统提供的各类函数，还可以调用用户自定义的函数，用来处理一些比较特殊的运算，或者封装某些计算过程。在这里，我们了解一下用invoke函数调http://t.cn/RZh95Ur
发表了博文《集算器文本处理之字符匹配》在进行文本处理时，有时候需要找出包含了指定字符的单词。这个运算的逻辑并不复杂，但由于次序随意，使用正则表达式并不容易写，而且运行效率也很低，还不如自行编码实现。但http://t.cn/RZAIPGN
发表了博文《集算器集成与应用之命令行》命令行是指在类似于DOS中，用字符串形式的命令来执行程序。各类系统都支持命令行的使用，如Linux系统的控制台，或者Windows系统的command窗口等。用命http://t.cn/RZLoidY
发表了博文《集算器集成与应用之被JAVA调用(1)》可以将集算器嵌入到Java应用程序中。使用时类似于用JDBC访问数据库的方式调用集算器网格程序。在过程中，网格程序被包装成存储过程，因此调用方法与调http://t.cn/RZyn9kN
发表了博文《集算器集成与应用之被JAVA调用(2)》3、无结果集和多个结果集在调用网格文件时，还允许无返回数据。如下面的网格文件outputData1.dfx：文件中使用了字符串序列类型的参数Arg：http://t.cn/RZymHcz
