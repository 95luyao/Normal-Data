 @郭宇 最近一直在北京吗？要不要搞个 finish up weekend 的活动，让大家把自己个人的烂尾项目带来集中突破？反正我是很需要一个这样的活动。
我想问大家一个问题，如果每页的样式我都可以编译到这一页的 js 里面，用 <style> 写出来，那么这些样式还有没有必要单独成 css 呢？这有什么坏处呢？FOUC？或者不支持js的浏览器就没有样式了？可这是 2014 年，不支持js的话就给他裸奔语义化良好的html好不好？@__pw__@johnhax@题叶@lepture@leeiio
我现在觉得react最好，从此以后只想写RP，朝着FRP方向努力了。 http://t.cn/z8AGXKq
我现在觉得react最好，从此以后只想写RP，朝着FRP方向努力了。
两个目标，一是从今天开始用心做一款自己的产品，能给自己带来基本的生活保障；二是好好学英语练技术，有合适的美国公司愿收我就过去吧。慢慢来，但是墙是一定要翻的，只为能上Google。
【想做 C++ 方面开发，是基于 Linux 还是基于 Windows 平台？】萧井陌：我觉得故事是这样发展的.... 先是纠结语言 (lisp没听过听说python效率不高还缩进原来ruby是小鬼子弄的那个什么叫lua的只能用来写游戏脚本放眼望去java只能… http://t.cn/8sE6lJU（分享自 @知乎）
妈蛋！最郁闷的事情就是为别人 debug 了！
Mac 有个不爽的地方：长开着电脑磁盘会逐渐被占用。虽然知道一重启就能空出来十几 G，但就是不想重启。。。
好想折腾 Linux 啊！
才发现，Yosemite 学习了 Windows，双击窗口标题栏最大化。
最近从 @财政学研究 的微博上学到了受益终生的四个大字：「安心交租」。
express 要被玩坏了的赶脚。干脆自己写一个框架玩？
找到一个在 CoffeeScript 文件中写单元测试的好方法，今后的项目可以试试看。@题叶 这还是模仿之前在果壳里技术部的做法呢对吧 @黄须奴
最近真的感觉，有些人，对于一个社区来说，存在或不存在，对这社区的感受是有差别的。比如佐藤谦一还在时候的知乎，比如 tj 还在时候的 node community
最近真的感觉，有些人，对于一个社区来说，存在或不存在，对这社区的感受是有差别的。比如佐藤谦一还在时候的知乎，比如 tj 还在时候的 node community。所以，要努力做一个有存在感的人。。。
再不开始折腾硬件，我感觉要很快被时代抛弃了。。 @图拉鼎 http://t.cn/RPhoFyq
可以写 litcoffee 喽~[鼓掌] 哎现在得上班了，晚上整理一下再发布分享。@题叶 you would love this
接上一条，使用效果
看了一下 restify 的文档，我想以后可以直接用这个。开发个 Single Page App 之类的。 http://t.cn/RPztY9z
@fraserxv 你如何用 node stream 做 frp 的？用了哪些库？
我覺得技術上，我一個方向是想搞網絡編程，和協議打交道。另一個方向是想做 Frontend DevOps。
React: Rethinking Best Practices http://t.cn/z8F9YCF
React: Rethinking Best Practices http://t.cn/z8F9YCF
React: Rethinking Best Practices http://t.cn/z8F9YCF
似乎動手做事情之前總是不能先考慮周全。剛纔想如果我要寫 react 而又要和寫樣式的設計師合作的話，我該怎麼辦呢？於是寫了一個 htmlxify 的 browser transform 來把 js 和 jsx 語法的類 html 模板分開。但是寫 examples 的時候傻了：我要怎麼在 htmlx 裏面用其他模塊呢？react 裏面結構和行文是真愛啊
我的 devtools 保存 css 樣式文件有問題，最新版本 chrome 以及下載試用過 canary 都是一樣的問題。不知道其他人有沒有遇到過，有可能是 Yosemite 系統的問題？@题叶
react 的 browserify bund 太慢了，之前都是把它 external，現在知道原來 substack 寫的 watchify 是增量的，所以第一次運行起來是 2s，之後就快多了。
react 越搞越好玩，给 htmlxify 模组重新定义了 api http://t.cn/RPbBMO5 现在我直接用 watchify 输出 bundle.js, 然后直接在 chrome devtools 里面调试保存。哈哈。
一直想挖的坑 browsearify，写一个 seajs lite 来配合 browserify 做动态加载。现在坑占住了，择日再填 http://t.cn/RPfMZui
今天搞上了两个 npm modules, 一个是从 substack 的 insert-css fork 过来的 link-css，另一个是直接在 js 里面 require css 的 browserify transformer。未将来模块化构建工具做准备。最近产出不错哈，加油。
希望将来能有位好记者，来写写 node 社区的恩怨情仇。等到 node 开始占更重要地位，就会有人想做这件事情了。
问一下大家 0.10.0 版本的 react 是怎么做到安装的时候把 envify 安装到 react 同级 node_modules 目录而不是 react/node_modules 目录下的？看 package.json http://t.cn/RPxZqwP 没看出什么特别。@朴灵 @Python发烧友 @题叶 @__pw__ @郭宇
可能上一条推没说明白我的问题，看图。我只装 react，但是 envify 也出现在 node_modules 里面，按理说应该在 react/node_modules 里。@朴灵
凑热闹#秀键盘#@SegmentFault http://t.cn/8kREbNy
今天主要是搞一个叫 log4js-or-debug 的 module http://t.cn/RPxboFR 。因为我在开发时是用 tj 的 debug 模块来做调试的，上线后要对接日志系统。因为后端的 JavaEE 用的是 log4j 那一套，我也得用类似的，于是做了一个 debug 的封装让他在生产环境输出到 log4js，效果如图
坚持每天一个 module，上一回 npmjs.org 首页的 Most Prolific Recently 试试吧。
这几天在研究 logging 的事，然后今天我想我自己的网站应该加全文搜索，研究一下 elasticsearch 吧，然后发现这东西很适合来记录日志嘛，放狗搜了搜，果然有人这么做 http://t.cn/RPJQbvH
大家不觉得现有的 live reload 插件都太弱了吗？brackets 的 live preview 是挺强大，但是只对静态 html 和 css 支持友好，对动态生成的 html 就比较麻烦。最强的当然是直接在 chrome 里面编辑保存，但是你开发阶段还是会更喜欢自己最爱的编辑器呀是吧。 http://t.cn/RPib9VQ
大家不觉得现有的 live reload 插件都太弱了吗？brackets 的 live preview 是挺强大，但是只对静态 html 和 css 支持友好，对动态生成的 html 就比较麻烦。最强的当然是直接在 chrome 里面编辑保存，但是你开发阶段还是会更喜欢自己最爱的编辑器呀是吧。
(接上条)所以我想基于react，搞个基于模板partial和css的live reload，css简单，html的话细分出来哪个模板有改动了对应到网页上用的组建那块ui就自动重新加载，就是说网页中运行着的程序即时刷新某一部分有改动的地方，碉堡了啊。@题叶 见过这样的工具吗？
(再接)css的话应该比较简单，把原引用的<link>删掉重新加一个就行，最多考虑下缓存。厉害的是javascript部分，这就要说到reqct的牛逼了。我只要在运行过程中替换掉它的render函数就可以了，请问angular方便做同样的事情吗？@__pw__
webpack seems promising. 要准备在 loader 界一统江湖了。
yosemite p5 有了 @题叶 @图拉鼎
http://t.cn/RPaVSsD oauth2-auth 是从弊司 oauth2 server 项目中拆出的 helpers 方便做 authorization middleware。文档和测试还没写，测试还在大项目里面没能独立出来。我会继续拆出与业务无关的部分开源。
求同事！与其让 HR 帮找还不如在自己的圈子里找！靠谱互联网金融创业公司，老板有想法，环境宽松（得承认目前工作量有点大），公司简介 http://t.cn/RPSmI3l 想和我一起玩 node.js 和 前端技术的请联系！
求同事！与其让 HR 帮找还不如在自己的圈子里找！靠谱互联网金融创业公司，老板有想法，环境宽松（得承认目前工作量有点大），公司简介 http://t.cn/RPSmI3l 想和我一起玩 node.js 和 前端技术的请联系！求朋友们自觉帮转。
我觉得自己不够聪明，（或许应该是比较笨的，只是不好意思这么直说），所以我写的代码要尽量有测试覆盖。
如何写简单明了运行可靠的代码，而不是抖机灵的奇技淫巧，需要大智慧啊。
http://t.cn/RPKAr29 npm shrinkwrap，有了这个命令几乎可以省略掉 node_modules 签入代码库问过程了
我真的不知道，没有自动化测试的大型程序要怎么样去维护，有大神能指点吗？用人肉的测试工程师？已经好久没呆过有专业测试人员的团队了。。。
原来抽掉了我给公司贡献的代码之后，我的 GitHub Contributions 那么惨不忍睹。之前是一片绿的。。。
@lepture 说得对，bower 确实没做什么事情，反而添乱，要用 bower 还不如用 git submodule！
哎呀在 Mac 上的 VirtualBox 里面跑 Ubuntu 里面的 awesome wm 就是我最终的归宿。使用感受太爽了！改天写文分享。
正好 444 条微博，这意思是不作就不会死么 [挖鼻屎]
substack 的 browserling 和 testling 很不靠谱啊。第一次尝试 browserling，它虚拟机中病毒无论设置哪个 url 都是打开的不知道哪个语言的某国外网站，三分钟免费尝试时间很快就过去了什么都没能试到。第二次就刚才照 testling quick start http://t.cn/RPN7Awb 使用，跑不起来
让用户帮忙在用户的浏览器跑前端测试，然后发送结果到服务器收集，业界有没有公司实践过？ http://t.cn/z8AGXKq
尝试 TypeScript：http://t.cn/RPpUQPz 我本来以为既然做静态类型检查了，那么应该能做好 overload 吧，结果 overload 逻辑还是得自己写，只是在前面多声明几个调用方式。
今天做了下搬运工，把 purecss 和 typocss 搬到 npm 上了。。。
spoike 的 reflux 库 http://t.cn/RPO1whz，目前最令我心动的 flux 实现了。
我的 vim 配置 vimsettings 的 star 数一直在我 github 里面是前三名，而那已经两年没更新了，之后更新的一直是放到 vimrc 里面，但这个 repo 却没人关注。今天合并两个 repo，删掉一个。在这里： http://t.cn/RPOr4RA
#Smooth# Smooth微博客户端3.8.1发布了，快速流畅的操作体验，简单清爽的界面，适配主流手机操作系统，快来体验吧!下载地址：http://t.cn/zlWKUG2
webpack 啊，写了那么多测试竟然被我一个新手上来就踩到一个没覆盖到的坑。。。 http://t.cn/RPWKrLI
我觉得 github 里的 node.js 项目接受 bugfix 的 pr 后就 bump version & npm publish 应该是基本公德吧。
发现一个特别好用的 macro "Randomly Disappearing Code" 推荐你试试看 http://t.cn/RPW1KUe
require-uncached 对 node 测试非常好用。http://t.cn/RPllpWv
一旦开始考虑 hot reload，顿时感觉系统的复杂性上升了一个层次。理论基础不行啊。原来只要跑死的运算规则就可以，现在这些运算规则可能也要对自身的某一部分敏感了。的确困难，但是真的非常有意思！同学们有什么好书推荐吗？
微信啥时候才能像 hangouts 一样接管我的短信？
最近在折腾 webpack 的 hot module replacement 和 react 的 flux 架构，感觉 spoike 的 reflux 是最合适的，但是目前项目还在初级阶段，所以自己可以贡献很多新想法，非常高兴地和它们交流 http://t.cn/RPHoZRA 里面提到了我正在折腾的 dispatcher
http://t.cn/RP8xYtv @lepture
北上深三地求小伙伴！我的粉丝以及朋友的粉丝中有没有人愿意和我成为同事的。我喜欢尊崇函数式、欣赏 react 与其 flux 架构之美的人，如果你是，快来一起玩吧。 另外 iOS 和 UI 设计师也招 http://t.cn/RPRuRZG undozen#creditcloud.com 求帮转
我现在的 npm test: jsonlint package.json 1> /dev/null && for file in config/*.json; do jsonlint $file 1> /dev/null; if [ $? != 0 ]; then exit 1; fi; done && NODE_ENV=test mocha 先检查 json 对不对，不要干傻事
我这好像是要改名叫 React发烧友 的节奏。。。
开始读最经典的《测试驱动开发》了，虽然 tdd 已经有一阵子了，还是可以从中学到挺多东西。我的项目第一个 test case 经常是：ensure a tdd approach
Ha, I'm a happy contributor of Reflux right now. http://t.cn/RPnpyal
执行力啊，不止一个人提过想要用 npm 安装 purecss http://t.cn/RPnO987 只有我动手了，哈哈。
http://t.cn/RP175Dr stream.pipe() 不可靠
"@newtriks: OpenSourced #ReactJS libraries from Bodhi Five: ScopedStyles, JSXControlFlow, SafeInnerHTML & ExternalComponents.  plus.google.com/102592078525677391689/posts/hED3SLwWto3"  from twitter
"newtriks: OpenSourced #ReactJS libraries from Bodhi Five: ScopedStyles, JSXControlFlow, SafeInnerHTML & ExternalComponents.  http://t.cn/RPBvesR"  from twitter
“ For comparison, Angular, a popular JS framework from Google, isn't used on Google's flagship client-side applications (Google+, Gmail, and Docs use Closure). ”自吃狗粮的 react http://t.cn/RPdnYKH
npme 挺贵的，$25 per seat，我还是用开源免费产品吧。cnpm unpm 都不错
npm 里面 esprima-fb 的主版本号超过 3000 了，好样的~
请问有没有先哲曾说过这句话：珍爱生命，原理阿里云。
两位工程师在讨论英语 101
变化真快，几个月前还因为 pm2 对 v0.11 支持不好而没有选择激进地使用 koa，现在坚持着稳定版 v0.10.31 的我已经被 pm2 的新版本抛弃了。。。
nodejs 邮件组里面又有人把一年多以前那个询问 0.12 啥时候出的帖子翻出来了，以往我们会把这种行为叫做挖坟，可惜的是，现在这个帖子的问题仍然困扰着整个社区。。。@__pw__
我擦好神速！刚刚刷微博时发现 @HackerNewsDaily 最新一条微博关于古狗的文章，再刷就不见了，文章内容一点不敏感是关于密码学和网络安全的。现在是连这个公司的名字也不能提了吗。
webpack 的作者太牛逼了，但是要搞清楚他现在这整套东西，有点困难。
我想设计师朋友们可以用按修改收费的计价方式：第一版免费，每次修改收费，修改更多加价。
手机啊，安卓党早就用上大屏了，索尼党的教徒没事就拿手机去水里洗洗，这个 iPhone 目前还做不到。
马蛋！微博昵称不准出现「中国」二字，只能加点符号！
这次真的是 v0.12 发布在即了：http://t.cn/Rhftc09
做开源项目是很辛苦哒，用家的什么屁事儿都可能来烦你，比如 http://t.cn/RhIlRia 我也很喜欢这个回复“I don't know... Try it...”哈哈，今天正好学了一招瞬间变暖男/绿茶婊，「关我屁事」要提换成「你自己开心就好啦：）」，「关你屁事」要提换成「你猜；）」
做开源项目是很辛苦哒，用户的什么屁事儿都可能来烦你，比如 http://t.cn/RhIlRia 我也很喜欢这个回复“I don't know... Try it...”哈哈，今天正好学了一招瞬间变暖男/绿茶婊，「关我屁事」要替换成「你自己开心就好啦：）」，「关你屁事」要替换成「你猜；）」
这是 @题叶 同学整理的目前的 React 资源，http://t.cn/RholQcV 社区稍后我们会用 React 来做一个边学边实践边玩
这是 @题叶 同学整理的目前的 React 资源，http://t.cn/RholQcV 社区稍后我们会用 React 来做一个边学边实践边玩 @reactjs @fraserxv
npm shrinkwrap 啊！满满都是坑！！
请教大家一个基本问题，https 的，basic auth 也是明文传输的吧，因为在 url 和 header 里
npm 2.0.0 随 0.11.14 发布(妈蛋说好的 0.12 呢!) -- 脚下有坑大家注意哈~
WOW! 今天最令人振奋的消息，maxtaco 没什么疑问就干脆地 merge 了我给 iced-coffee-script 的这个 pr http://t.cn/RhnGqnz 以后 ICS 能写得更爽了，不用多包一两层 wrapper [鼓掌]
undocument api 真不好玩，黑魔法啊全是，比如 react 的 context
读 functional 的教程总会觉得像是读绕口令似的：(a monad should) have a binding operation that takes a monad, a function that takes a some type and returns a monad, and returns a monad. [晕]
做前端架构真不容易，我能力还弱了点，但不做怎么能进步呢，要永远站在学习区呀。
我之前觉得 reflux 这种 actor 以及 store 直接 listenTo store 的方式挺好，但是实际用下来发现似乎还是传统的 dispatcher 架构更清晰。
擦！突然发现 Chrome 38 已经支持 Promise 了！
@GUOGUOGIS 您数字好整
我是"React-中-国-发烧友", 我已经将名字改为"undoZen",请继续关注我哦~
小伙伴们，快来围观！我已经升级为V6新版微博，简洁的界面带来更流畅的体验。准备好了吗？和我们一起发现新的世界吧！升级猛戳:http://t.cn/R7vgnNI http://t.cn/R7PWMm5
Going Isomorphic with React http://t.cn/R7L4v0U
妈蛋，superagent 满满都是坑，不用了！
今天@图拉鼎 过来，明天想约几个朋友聚聚聊一聊玩玩桌游。@__pw__ 你们夫妇有时间不？@Pepsino 来见一面？
@图拉鼎 给你推荐一个餐馆：花马天堂云南餐厅。http://t.cn/R7brOdu
我理解@街拍滚叔 每晚为什么要发鸡汤道晚安，每天为自己写点东西总是好的，不管有没有人能看到。总是刷微博，在消费信息，而当你试图自己写点什么的时候，感觉就完全不一样了。嗯，我这不知道会不会是鸡汤，我只会尽量诚实地表达所思所想，对看到的人或许会有启发和慰藉，那样就最好了。
其实我早想搞培训了，带几个低薪徒弟搞外包，一年后把他们高价买给BAT（话说我自己都进不去，我徒弟行吗）。名字我都想好了，就叫前端工厂，域名也已经注册过 definefactory.com
现在这个时间点，半年内，在哪个行业创业，是风投们闭着眼睛疯投钱的？
惊喜地发现 6to5 已经支持 generators 了！我要写回 JavaScript! JS 大发好！
现在想见苹果的天才们一面已经那么难了，又是要身份证号又是要短信验证的，现在预约到周五去了。。。
 土豆的前端工程做得不行
gulp 3.7 之后可以直接支持 gulpfile.coffee gulpfile.iced 这些，甚至连 gulpfile.ls（LiveScript）都支持，太赞了。
在有更强的能力前，React + LiveScript 是我目前最想用的技术。
LiveScript 真是超强大诶，很好吃的语法糖，甜而不腻，配合 react 和 immutable 来写很舒心。以后都只想写 LS 了
#反正我不是处女座#
我靠，一个完美的注册表单真是大工程。还是说我已经不会写前端了。。。
大家帮我 @ 合适的人吧
我也不想再玩前端，主要是不想和傻逼浏览器打交道，想放两年等 IE9 绝迹了再出山。。。
小米超过三星都是迟早的事，因为它没情怀
虽然之前黑过@玉伯也叫射雕 的seajs（我很怀疑，这位能自黑的黑人大神谁能黑得上呢），但是话说回来，我一直觉得前端加载性能要做到极致优化，加载器是不可少的。所以一直想做个seajs与browserify结合的东西（npm上browsearify坑已占） http://t.cn/8kREbNy
虽然之前黑过@玉伯也叫射雕 的seajs（我很怀疑，这位能自黑的黑人大神谁能黑得上呢），但是话说回来，我一直觉得前端加载性能要做到极致优化，加载器是不可少的。所以一直想做个seajs与browserify结合的东西（npm上browsearify坑已占）
百度这种店大欺客的傻逼公司，我只能咒它早日倒闭了，尽量自觉抵制它家产品，个人网站全加上https对谷歌友好同时自动屏蔽百度爬虫。
我在 @知乎 回答了【国内有哪些公司在使用 React.js ?】：我目前服务的公司 云信(北京)信息咨询有限公司 在开始用 React 做组建化。我们为传统金融公司做互联网化的技术咨询，说白了就是给他们做 P2P 网站。 因为我不想来一个客户就复制一份代码给他们改前… http://t.cn/R7WJqF7
今天快过完了，是不是有些该发生的事情还没有发生？@李楠或kkk @黄章 @周鸿祎
lisp真是一门好语言，教女友一个多小时，已基本掌握。下节课就一起学sicp喽。感谢已逝的麦卡锡大叔。
「一个注册表单而已，为什么要做那么久？」让我来告诉你一个仅需要用户名和全名的注册表单有多难吧 http://t.cn/R7nTnEK 在加上 email 验证？密码验证？密码强弱规则？短信验证？
我之前说自己的智商玩不转 grunt，只能玩 gulp，但是最近发现，写 gulpfile 其实也还是挺复杂的。准备开始折腾 broccoli 了。。。 这是一篇观念性的介绍 http://t.cn/8FYX5KE
http://t.cn/R7uJF5S @联想 的抄袭能力另@小米手机 蒙羞了
http://t.cn/R7uJF5S @联想 的抄袭能力让@小米手机 蒙羞了
node-inspector 的 master 分之已经合进 profiling tab 了，支持 v0.11 @__pw__ 你说对了，快 12 月了。。。
今天找性能瓶颈，被自己的脑残经经惊到了，想撞墙死。。。
浏览器一角
想尝试一下 c9.io 结果这工程质量让人无力吐槽了
看到饿了么的技术博客真的有在写诶，不错，我们 CreditCloud 的页准备开始了。
ractivejs 的作者不知道怎么想的，只注册了 org 域名，把 .com 域名留给了我。@月明沧海 有兴趣一起翻译文档不
最小白的 windows 上搭建 node.js 环境教程。以弊司 demo 项目为例 http://t.cn/RzoodRc
才注意到，微博这几个字做得可以嘛~
用 marked + ractive 几行代码写成的 markdown 编辑器，ractive 比 react 更简洁
又搞了个域名： yieldnext.com
在意识到排期的紧张程度后，老大当机立断，一口气调来了2个RD，1个QA，砍掉了1个PM
哇靠 npmjs.org 终于变好看一点了
有点想做做node和前端相关的咨询工作，我的经验主要在静态文件部署包括加载和模块化这方面，你给我说说你遇到的难题，我评估能否解决以及需要的时间和价钱，试试。
我可以炫耀一下办公环境吗？简历请投 hr@creditcloud.com
有谁准备跟进 iojs 呢？
npm 里面 git 相关的 modules 真够多，很多都是要么使用麻烦要么依赖 git 命令行工具，找了半天终于让我找着这个 http://t.cn/RzYtVZl 小工具了，正是我想要的
creditcloud 也开始用 cnpm 了，正好，叫 ccnpm
node 开发者们期待 0.12 的眼神给 from nodejsreactions.tumblr.com @__pw__
这车主一定是程序员
啊哦，npmjs.com 的 0 downtime 没能坚持到第二个月。。
预测我的下一份工作是专职用es6写开源模组，hr和猎头们现在可以开始预约了。
发了一个 npm module rev-rewriter，懒得写文档所以把测试全放 readme 里面了 http://t.cn/RzuvXJC
下届 @JSConfChina 想分享 gulp and stream （虽然 stream substack 一直在说）@朴灵 @goddyzhao
在 npm.com 看到广告 Hired is hiring. 哈哈哈 @Easy
用 superagent 的童鞋赶快来支持这个大快人心的 pr http://t.cn/RzD1LvC
简直了，必须推荐给你们看看！多 tab event emitter，订阅我的自频道吧：http://t.cn/RZLgkor  （分享自 @土豆科技） http://t.cn/RZLgDBO
多 tab event emitter - 用 intercom + bacon + ractive 实现   http://t.cn/RZLDLeK (来 @土豆 订阅我的自频道 http://t.cn/RZLgkor )
